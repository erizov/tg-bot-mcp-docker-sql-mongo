#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–≥–æ–≤ –±–æ—Ç–∞.
–ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –ª–æ–≥–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.
"""

import os
import sys
from datetime import datetime, timedelta
from pathlib import Path


def setup_encoding():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è Windows."""
    if sys.platform == "win32":
        import codecs
        sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())


def create_test_logs():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞."""
    logs_dir = Path("logs")
    logs_dir.mkdir(exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥ —Ñ–∞–π–ª —Å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç–æ–π
    today = datetime.now().strftime("%Y%m%d")
    log_file = logs_dir / f"bot_{today}.log"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–æ–≤
    test_logs = [
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Database initialized successfully",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Starting bot...",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Bot started successfully",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=12345, username=@testuser, action=start, details=",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=12345, username=@testuser, action=add_note, details=ID=11, Title='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞'",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Note added: ID=11, Title='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞', Due=None",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=12345, username=@testuser, action=search, details=query='–≤–∞–∂–Ω–æ'",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Search performed: query='–≤–∞–∂–Ω–æ', results=2",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=12345, username=@testuser, action=list, details=",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=67890, username=@anotheruser, action=start, details=",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=67890, username=@anotheruser, action=stats, details=",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=12345, username=@testuser, action=delete_note, details=ID=5, Title='–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã'",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Note deleted: ID=5",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - WARNING - Attempt to delete non-existent note: ID=999",
        f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - ERROR - Database connection failed: database is locked",
    ]
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏
    with open(log_file, 'w', encoding='utf-8') as f:
        for log_entry in test_logs:
            f.write(log_entry + '\n')
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥-—Ñ–∞–π–ª: {log_file}")
    print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–æ {len(test_logs)} –∑–∞–ø–∏—Å–µ–π")
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥ —Ñ–∞–π–ª –∑–∞ –≤—á–µ—Ä–∞
    yesterday = (datetime.now() - timedelta(days=1)).strftime("%Y%m%d")
    yesterday_log = logs_dir / f"bot_{yesterday}.log"
    
    yesterday_logs = [
        f"{(datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Database initialized successfully",
        f"{(datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=11111, username=@yesterdayuser, action=start, details=",
        f"{(datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - User action: user_id=11111, username=@yesterdayuser, action=add_note, details=ID=12, Title='–í—á–µ—Ä–∞—à–Ω—è—è –∑–∞–º–µ—Ç–∫–∞'",
        f"{(datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d %H:%M:%S')} - notes_bot - INFO - Note added: ID=12, Title='–í—á–µ—Ä–∞—à–Ω—è—è –∑–∞–º–µ—Ç–∫–∞', Due=None",
    ]
    
    with open(yesterday_log, 'w', encoding='utf-8') as f:
        for log_entry in yesterday_logs:
            f.write(log_entry + '\n')
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥-—Ñ–∞–π–ª: {yesterday_log}")
    print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–æ {len(yesterday_logs)} –∑–∞–ø–∏—Å–µ–π")
    
    return log_file, yesterday_log


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    setup_encoding()
    
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–≥–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    print()
    
    try:
        log_files = create_test_logs()
        
        print()
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ª–æ–≥–æ–≤:")
        for log_file in log_files:
            if log_file.exists():
                size = log_file.stat().st_size
                with open(log_file, 'r', encoding='utf-8') as f:
                    lines = len(f.readlines())
                print(f"  üìÅ {log_file.name}: {lines} —Å—Ç—Ä–æ–∫, {size} –±–∞–π—Ç")
        
        print()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å 'python monitor.py' –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–≥–æ–≤: {e}")


if __name__ == "__main__":
    main()
